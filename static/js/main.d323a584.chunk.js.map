{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","resetBTN","this","myGoods","goods","visibleGoods","LENGTH","sort","g1","g2","length","ALPABET","localeCompare","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","setState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqDE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,KACnBC,UAAU,GAJd,4CAOE,WAAU,IAAD,OACP,EAA2CC,KAAKL,MAAxCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAAUE,EAA9B,EAA8BA,SACxBE,EAlDH,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNO,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,OACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAChBD,EAAGE,OAASD,EAAGC,UAEjB,MAEF,KAAKhB,EAASiB,QACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAChBD,EAAGI,cAAcH,MAevB,OARIX,GACFO,EAAaQ,UAKfC,QAAQC,IAAIhB,EAAUD,GAEfO,EAmBWW,CAAkBrB,EAChC,CAAEI,WAAUD,eAEd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYpB,IAAaL,EAASiB,UAEtCS,QAAS,kBAAM,EAAKC,SAAS,CAC3BtB,SAAUL,EAASiB,QACnBV,UAAU,KATd,iCAeA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYpB,IAAaL,EAASY,SAEtCc,QAAS,kBAAM,EAAKC,SAAS,CAC3BtB,SAAUL,EAASY,OACnBL,UAAU,KATd,4BAeA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAfrB,IAEhBsB,QAAS,WACP,EAAKC,UAAS,WACZ,OAAIvB,EACK,CAAEA,YAAY,EAAOG,UAAU,GAGjC,CAAEH,YAAY,EAAMG,UAAU,OAb3C,qBAoBCA,GACC,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKC,SAAS,CAC3BpB,UAAU,EACVH,YAAY,EACZC,SAAUL,EAASM,QANvB,sBAeJ,6BACE,6BACGG,EAAQmB,KAAI,SAAAC,GAAI,OACf,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBApFvB,GAAyBC,aCpEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d323a584.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => (\n        g1.length - g2.length\n      ));\n      break;\n\n    case SortType.ALPABET:\n      visibleGoods.sort((g1, g2) => (\n        g1.localeCompare(g2)\n      ));\n      break;\n\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  resetBTN: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n    resetBTN: false,\n  };\n\n  render() {\n    const { isReversed, sortType, resetBTN } = this.state;\n    const myGoods = getReorderedGoods(goodsFromServer,\n      { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={() => this.setState({\n              sortType: SortType.ALPABET,\n              resetBTN: true,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.setState({\n              sortType: SortType.LENGTH,\n              resetBTN: true,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed !== true },\n            )}\n            onClick={() => {\n              this.setState(() => {\n                if (isReversed) {\n                  return { isReversed: false, resetBTN: true };\n                }\n\n                return { isReversed: true, resetBTN: true };\n              });\n            }}\n          >\n            Reverse\n          </button>\n\n          {resetBTN && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                resetBTN: false,\n                isReversed: false,\n                sortType: SortType.NONE,\n              })}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {myGoods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}