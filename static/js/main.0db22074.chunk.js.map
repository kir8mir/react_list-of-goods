{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","reset","sortBy","this","myGoods","goods","visibleGoods","sort","good1","good2","LENGTH","length","ALPABET","localeCompare","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAmB,CAC/BC,YAAaD,EAAMC,gBARzB,EAYEK,MAAQ,WACN,EAAKD,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAfzB,EAmBEI,OAAS,SAACA,GACR,EAAKF,SAAS,CACZH,SAAUK,KArBhB,4CAyBE,WAAU,IAAD,OACP,EAAiCC,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EA5DH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNU,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQZ,GACN,KAAKL,EAASkB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKnB,EAASoB,QACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAITb,GACFU,EAAaP,UAGRO,EAoCWQ,CACdrB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYpB,IAAaL,EAASoB,UAEtCM,QAAS,kBAAM,EAAKhB,OAAOV,EAASoB,UAPtC,iCAYA,wBACEI,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYpB,IAAaL,EAASkB,SAEtCQ,QAAS,kBAAM,EAAKhB,OAAOV,EAASkB,SAPtC,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAfrB,IAEhBsB,QAASf,KAAKJ,QAPhB,sBAYEH,GAAcC,IAAaL,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKlB,SAAS,CAC3BJ,YAAY,EACZC,SAAUL,EAASM,QALvB,sBAcJ,6BACE,6BACGM,EAAQe,KAAI,SAAAC,GAAI,OACf,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAzFvB,GAAyBC,aC5DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0db22074.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  sortBy = (sortBy: SortType) => {\n    this.setState({\n      sortType: sortBy,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const myGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={() => this.sortBy(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.sortBy(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed !== true },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                isReversed: false,\n                sortType: SortType.NONE,\n              })}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {myGoods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}